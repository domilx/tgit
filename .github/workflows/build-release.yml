name: Build and Release

on:
  push:
    branches:
      - main  # or the name of your default branch

jobs:
  build:
    runs-on: windows-latest  # since you want to build a Windows executable

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'  # Use the version of Python you need

      - name: Install dependencies
        run: |
          pip install pyinstaller
          # Add other dependencies if needed

      - name: Build executable with PyInstaller
        run: py -m PyInstaller --onefile tgit.py
        # Replace tgit.py with the path to your Python script

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: Executable
          path: dist/tgit.exe
          # Replace tgit.exe with the name of the executable generated by PyInstaller

  release:
    needs: build
    runs-on: windows-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: Executable

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./tgit.exe
          asset_name: tgit.exe
          asset_content_type: application/octet-stream
